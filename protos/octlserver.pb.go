// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/octlserver.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	protos/octlserver.proto

It has these top-level messages:
	Event_MesosHeartbeat
	Event_GenericMessage
	StatusRequest
	StatusReply
	StatusUpdate
	GetFrameworkInfoRequest
	GetFrameworkInfoReply
	TeardownRequest
	TeardownReply
	GetEnvironmentsRequest
	GetEnvironmentsReply
	EnvironmentInfo
	NewEnvironmentRequest
	NewEnvironmentReply
	GetEnvironmentRequest
	GetEnvironmentReply
	ControlEnvironmentRequest
	ControlEnvironmentReply
	ModifyEnvironmentRequest
	EnvironmentOperation
	ModifyEnvironmentReply
	DestroyEnvironmentRequest
	DestroyEnvironmentReply
	GetRolesRequest
	GetRolesReply
	RoleInfo
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusUpdate_Level int32

const (
	StatusUpdate_DEBUG   StatusUpdate_Level = 0
	StatusUpdate_INFO    StatusUpdate_Level = 1
	StatusUpdate_WARNING StatusUpdate_Level = 2
	StatusUpdate_ERROR   StatusUpdate_Level = 3
)

var StatusUpdate_Level_name = map[int32]string{
	0: "DEBUG",
	1: "INFO",
	2: "WARNING",
	3: "ERROR",
}
var StatusUpdate_Level_value = map[string]int32{
	"DEBUG":   0,
	"INFO":    1,
	"WARNING": 2,
	"ERROR":   3,
}

func (x StatusUpdate_Level) String() string {
	return proto.EnumName(StatusUpdate_Level_name, int32(x))
}
func (StatusUpdate_Level) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type ControlEnvironmentRequest_Optype int32

const (
	ControlEnvironmentRequest_NOOP              ControlEnvironmentRequest_Optype = 0
	ControlEnvironmentRequest_START_ENVIRONMENT ControlEnvironmentRequest_Optype = 1
	ControlEnvironmentRequest_STOP_ENVIRONMENT  ControlEnvironmentRequest_Optype = 2
	ControlEnvironmentRequest_CONFIGURE         ControlEnvironmentRequest_Optype = 3
)

var ControlEnvironmentRequest_Optype_name = map[int32]string{
	0: "NOOP",
	1: "START_ENVIRONMENT",
	2: "STOP_ENVIRONMENT",
	3: "CONFIGURE",
}
var ControlEnvironmentRequest_Optype_value = map[string]int32{
	"NOOP":              0,
	"START_ENVIRONMENT": 1,
	"STOP_ENVIRONMENT":  2,
	"CONFIGURE":         3,
}

func (x ControlEnvironmentRequest_Optype) String() string {
	return proto.EnumName(ControlEnvironmentRequest_Optype_name, int32(x))
}
func (ControlEnvironmentRequest_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 0}
}

type EnvironmentOperation_Optype int32

const (
	EnvironmentOperation_NOOP        EnvironmentOperation_Optype = 0
	EnvironmentOperation_REMOVE_ROLE EnvironmentOperation_Optype = 3
	EnvironmentOperation_ADD_ROLE    EnvironmentOperation_Optype = 4
)

var EnvironmentOperation_Optype_name = map[int32]string{
	0: "NOOP",
	3: "REMOVE_ROLE",
	4: "ADD_ROLE",
}
var EnvironmentOperation_Optype_value = map[string]int32{
	"NOOP":        0,
	"REMOVE_ROLE": 3,
	"ADD_ROLE":    4,
}

func (x EnvironmentOperation_Optype) String() string {
	return proto.EnumName(EnvironmentOperation_Optype_name, int32(x))
}
func (EnvironmentOperation_Optype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19, 0}
}

type Event_MesosHeartbeat struct {
}

func (m *Event_MesosHeartbeat) Reset()                    { *m = Event_MesosHeartbeat{} }
func (m *Event_MesosHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*Event_MesosHeartbeat) ProtoMessage()               {}
func (*Event_MesosHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event_GenericMessage struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Event_GenericMessage) Reset()                    { *m = Event_GenericMessage{} }
func (m *Event_GenericMessage) String() string            { return proto.CompactTextString(m) }
func (*Event_GenericMessage) ProtoMessage()               {}
func (*Event_GenericMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event_GenericMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StatusRequest struct {
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type StatusReply struct {
	State         string          `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	StatusUpdates []*StatusUpdate `protobuf:"bytes,2,rep,name=statusUpdates" json:"statusUpdates,omitempty"`
}

func (m *StatusReply) Reset()                    { *m = StatusReply{} }
func (m *StatusReply) String() string            { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()               {}
func (*StatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StatusReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *StatusReply) GetStatusUpdates() []*StatusUpdate {
	if m != nil {
		return m.StatusUpdates
	}
	return nil
}

type StatusUpdate struct {
	Level StatusUpdate_Level `protobuf:"varint,1,opt,name=level,enum=octl.StatusUpdate_Level" json:"level,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*StatusUpdate_MesosHeartbeat
	//	*StatusUpdate_GenericMessage
	Event isStatusUpdate_Event `protobuf_oneof:"Event"`
}

func (m *StatusUpdate) Reset()                    { *m = StatusUpdate{} }
func (m *StatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*StatusUpdate) ProtoMessage()               {}
func (*StatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isStatusUpdate_Event interface {
	isStatusUpdate_Event()
}

type StatusUpdate_MesosHeartbeat struct {
	MesosHeartbeat *Event_MesosHeartbeat `protobuf:"bytes,2,opt,name=mesosHeartbeat,oneof"`
}
type StatusUpdate_GenericMessage struct {
	GenericMessage *Event_GenericMessage `protobuf:"bytes,3,opt,name=genericMessage,oneof"`
}

func (*StatusUpdate_MesosHeartbeat) isStatusUpdate_Event() {}
func (*StatusUpdate_GenericMessage) isStatusUpdate_Event() {}

func (m *StatusUpdate) GetEvent() isStatusUpdate_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StatusUpdate) GetLevel() StatusUpdate_Level {
	if m != nil {
		return m.Level
	}
	return StatusUpdate_DEBUG
}

func (m *StatusUpdate) GetMesosHeartbeat() *Event_MesosHeartbeat {
	if x, ok := m.GetEvent().(*StatusUpdate_MesosHeartbeat); ok {
		return x.MesosHeartbeat
	}
	return nil
}

func (m *StatusUpdate) GetGenericMessage() *Event_GenericMessage {
	if x, ok := m.GetEvent().(*StatusUpdate_GenericMessage); ok {
		return x.GenericMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StatusUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StatusUpdate_OneofMarshaler, _StatusUpdate_OneofUnmarshaler, _StatusUpdate_OneofSizer, []interface{}{
		(*StatusUpdate_MesosHeartbeat)(nil),
		(*StatusUpdate_GenericMessage)(nil),
	}
}

func _StatusUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MesosHeartbeat); err != nil {
			return err
		}
	case *StatusUpdate_GenericMessage:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GenericMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StatusUpdate.Event has unexpected type %T", x)
	}
	return nil
}

func _StatusUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StatusUpdate)
	switch tag {
	case 2: // Event.mesosHeartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_MesosHeartbeat)
		err := b.DecodeMessage(msg)
		m.Event = &StatusUpdate_MesosHeartbeat{msg}
		return true, err
	case 3: // Event.genericMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_GenericMessage)
		err := b.DecodeMessage(msg)
		m.Event = &StatusUpdate_GenericMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StatusUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StatusUpdate)
	// Event
	switch x := m.Event.(type) {
	case *StatusUpdate_MesosHeartbeat:
		s := proto.Size(x.MesosHeartbeat)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StatusUpdate_GenericMessage:
		s := proto.Size(x.GenericMessage)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetFrameworkInfoRequest struct {
}

func (m *GetFrameworkInfoRequest) Reset()                    { *m = GetFrameworkInfoRequest{} }
func (m *GetFrameworkInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFrameworkInfoRequest) ProtoMessage()               {}
func (*GetFrameworkInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type GetFrameworkInfoReply struct {
	FrameworkId       string `protobuf:"bytes,1,opt,name=frameworkId" json:"frameworkId,omitempty"`
	EnvironmentsCount int32  `protobuf:"varint,2,opt,name=environmentsCount" json:"environmentsCount,omitempty"`
	RolesCount        int32  `protobuf:"varint,3,opt,name=rolesCount" json:"rolesCount,omitempty"`
	State             string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
}

func (m *GetFrameworkInfoReply) Reset()                    { *m = GetFrameworkInfoReply{} }
func (m *GetFrameworkInfoReply) String() string            { return proto.CompactTextString(m) }
func (*GetFrameworkInfoReply) ProtoMessage()               {}
func (*GetFrameworkInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetFrameworkInfoReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetFrameworkInfoReply) GetEnvironmentsCount() int32 {
	if m != nil {
		return m.EnvironmentsCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetRolesCount() int32 {
	if m != nil {
		return m.RolesCount
	}
	return 0
}

func (m *GetFrameworkInfoReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type TeardownRequest struct {
	Reason string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
}

func (m *TeardownRequest) Reset()                    { *m = TeardownRequest{} }
func (m *TeardownRequest) String() string            { return proto.CompactTextString(m) }
func (*TeardownRequest) ProtoMessage()               {}
func (*TeardownRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TeardownRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TeardownReply struct {
}

func (m *TeardownReply) Reset()                    { *m = TeardownReply{} }
func (m *TeardownReply) String() string            { return proto.CompactTextString(m) }
func (*TeardownReply) ProtoMessage()               {}
func (*TeardownReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetEnvironmentsRequest struct {
}

func (m *GetEnvironmentsRequest) Reset()                    { *m = GetEnvironmentsRequest{} }
func (m *GetEnvironmentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentsRequest) ProtoMessage()               {}
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetEnvironmentsReply struct {
	FrameworkId  string             `protobuf:"bytes,1,opt,name=frameworkId" json:"frameworkId,omitempty"`
	Environments []*EnvironmentInfo `protobuf:"bytes,2,rep,name=environments" json:"environments,omitempty"`
}

func (m *GetEnvironmentsReply) Reset()                    { *m = GetEnvironmentsReply{} }
func (m *GetEnvironmentsReply) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentsReply) ProtoMessage()               {}
func (*GetEnvironmentsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetEnvironmentsReply) GetFrameworkId() string {
	if m != nil {
		return m.FrameworkId
	}
	return ""
}

func (m *GetEnvironmentsReply) GetEnvironments() []*EnvironmentInfo {
	if m != nil {
		return m.Environments
	}
	return nil
}

type EnvironmentInfo struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedWhen string   `protobuf:"bytes,2,opt,name=createdWhen" json:"createdWhen,omitempty"`
	State       string   `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Roles       []string `protobuf:"bytes,4,rep,name=roles" json:"roles,omitempty"`
}

func (m *EnvironmentInfo) Reset()                    { *m = EnvironmentInfo{} }
func (m *EnvironmentInfo) String() string            { return proto.CompactTextString(m) }
func (*EnvironmentInfo) ProtoMessage()               {}
func (*EnvironmentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *EnvironmentInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnvironmentInfo) GetCreatedWhen() string {
	if m != nil {
		return m.CreatedWhen
	}
	return ""
}

func (m *EnvironmentInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *EnvironmentInfo) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type NewEnvironmentRequest struct {
	Roles []string `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
}

func (m *NewEnvironmentRequest) Reset()                    { *m = NewEnvironmentRequest{} }
func (m *NewEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*NewEnvironmentRequest) ProtoMessage()               {}
func (*NewEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *NewEnvironmentRequest) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type NewEnvironmentReply struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *NewEnvironmentReply) Reset()                    { *m = NewEnvironmentReply{} }
func (m *NewEnvironmentReply) String() string            { return proto.CompactTextString(m) }
func (*NewEnvironmentReply) ProtoMessage()               {}
func (*NewEnvironmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *NewEnvironmentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewEnvironmentReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type GetEnvironmentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetEnvironmentRequest) Reset()                    { *m = GetEnvironmentRequest{} }
func (m *GetEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentRequest) ProtoMessage()               {}
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetEnvironmentReply struct {
	Environment *EnvironmentInfo `protobuf:"bytes,1,opt,name=environment" json:"environment,omitempty"`
}

func (m *GetEnvironmentReply) Reset()                    { *m = GetEnvironmentReply{} }
func (m *GetEnvironmentReply) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentReply) ProtoMessage()               {}
func (*GetEnvironmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetEnvironmentReply) GetEnvironment() *EnvironmentInfo {
	if m != nil {
		return m.Environment
	}
	return nil
}

type ControlEnvironmentRequest struct {
	Id   string                           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type ControlEnvironmentRequest_Optype `protobuf:"varint,2,opt,name=type,enum=octl.ControlEnvironmentRequest_Optype" json:"type,omitempty"`
}

func (m *ControlEnvironmentRequest) Reset()                    { *m = ControlEnvironmentRequest{} }
func (m *ControlEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*ControlEnvironmentRequest) ProtoMessage()               {}
func (*ControlEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ControlEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ControlEnvironmentRequest) GetType() ControlEnvironmentRequest_Optype {
	if m != nil {
		return m.Type
	}
	return ControlEnvironmentRequest_NOOP
}

type ControlEnvironmentReply struct {
}

func (m *ControlEnvironmentReply) Reset()                    { *m = ControlEnvironmentReply{} }
func (m *ControlEnvironmentReply) String() string            { return proto.CompactTextString(m) }
func (*ControlEnvironmentReply) ProtoMessage()               {}
func (*ControlEnvironmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type ModifyEnvironmentRequest struct {
	Id         string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Operations []*EnvironmentOperation `protobuf:"bytes,2,rep,name=operations" json:"operations,omitempty"`
}

func (m *ModifyEnvironmentRequest) Reset()                    { *m = ModifyEnvironmentRequest{} }
func (m *ModifyEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyEnvironmentRequest) ProtoMessage()               {}
func (*ModifyEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ModifyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyEnvironmentRequest) GetOperations() []*EnvironmentOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type EnvironmentOperation struct {
	Type     EnvironmentOperation_Optype `protobuf:"varint,1,opt,name=type,enum=octl.EnvironmentOperation_Optype" json:"type,omitempty"`
	RoleName string                      `protobuf:"bytes,2,opt,name=roleName" json:"roleName,omitempty"`
}

func (m *EnvironmentOperation) Reset()                    { *m = EnvironmentOperation{} }
func (m *EnvironmentOperation) String() string            { return proto.CompactTextString(m) }
func (*EnvironmentOperation) ProtoMessage()               {}
func (*EnvironmentOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *EnvironmentOperation) GetType() EnvironmentOperation_Optype {
	if m != nil {
		return m.Type
	}
	return EnvironmentOperation_NOOP
}

func (m *EnvironmentOperation) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

type ModifyEnvironmentReply struct {
	FailedOperations []*EnvironmentOperation `protobuf:"bytes,1,rep,name=failedOperations" json:"failedOperations,omitempty"`
}

func (m *ModifyEnvironmentReply) Reset()                    { *m = ModifyEnvironmentReply{} }
func (m *ModifyEnvironmentReply) String() string            { return proto.CompactTextString(m) }
func (*ModifyEnvironmentReply) ProtoMessage()               {}
func (*ModifyEnvironmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ModifyEnvironmentReply) GetFailedOperations() []*EnvironmentOperation {
	if m != nil {
		return m.FailedOperations
	}
	return nil
}

type DestroyEnvironmentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DestroyEnvironmentRequest) Reset()                    { *m = DestroyEnvironmentRequest{} }
func (m *DestroyEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*DestroyEnvironmentRequest) ProtoMessage()               {}
func (*DestroyEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DestroyEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DestroyEnvironmentReply struct {
}

func (m *DestroyEnvironmentReply) Reset()                    { *m = DestroyEnvironmentReply{} }
func (m *DestroyEnvironmentReply) String() string            { return proto.CompactTextString(m) }
func (*DestroyEnvironmentReply) ProtoMessage()               {}
func (*DestroyEnvironmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type GetRolesRequest struct {
}

func (m *GetRolesRequest) Reset()                    { *m = GetRolesRequest{} }
func (m *GetRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRolesRequest) ProtoMessage()               {}
func (*GetRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type GetRolesReply struct {
	Roles []*RoleInfo `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
}

func (m *GetRolesReply) Reset()                    { *m = GetRolesReply{} }
func (m *GetRolesReply) String() string            { return proto.CompactTextString(m) }
func (*GetRolesReply) ProtoMessage()               {}
func (*GetRolesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetRolesReply) GetRoles() []*RoleInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

type RoleInfo struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition" json:"condition,omitempty"`
	State     string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Hostname  string `protobuf:"bytes,4,opt,name=hostname" json:"hostname,omitempty"`
}

func (m *RoleInfo) Reset()                    { *m = RoleInfo{} }
func (m *RoleInfo) String() string            { return proto.CompactTextString(m) }
func (*RoleInfo) ProtoMessage()               {}
func (*RoleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *RoleInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoleInfo) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *RoleInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RoleInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func init() {
	proto.RegisterType((*Event_MesosHeartbeat)(nil), "octl.Event_MesosHeartbeat")
	proto.RegisterType((*Event_GenericMessage)(nil), "octl.Event_GenericMessage")
	proto.RegisterType((*StatusRequest)(nil), "octl.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "octl.StatusReply")
	proto.RegisterType((*StatusUpdate)(nil), "octl.StatusUpdate")
	proto.RegisterType((*GetFrameworkInfoRequest)(nil), "octl.GetFrameworkInfoRequest")
	proto.RegisterType((*GetFrameworkInfoReply)(nil), "octl.GetFrameworkInfoReply")
	proto.RegisterType((*TeardownRequest)(nil), "octl.TeardownRequest")
	proto.RegisterType((*TeardownReply)(nil), "octl.TeardownReply")
	proto.RegisterType((*GetEnvironmentsRequest)(nil), "octl.GetEnvironmentsRequest")
	proto.RegisterType((*GetEnvironmentsReply)(nil), "octl.GetEnvironmentsReply")
	proto.RegisterType((*EnvironmentInfo)(nil), "octl.EnvironmentInfo")
	proto.RegisterType((*NewEnvironmentRequest)(nil), "octl.NewEnvironmentRequest")
	proto.RegisterType((*NewEnvironmentReply)(nil), "octl.NewEnvironmentReply")
	proto.RegisterType((*GetEnvironmentRequest)(nil), "octl.GetEnvironmentRequest")
	proto.RegisterType((*GetEnvironmentReply)(nil), "octl.GetEnvironmentReply")
	proto.RegisterType((*ControlEnvironmentRequest)(nil), "octl.ControlEnvironmentRequest")
	proto.RegisterType((*ControlEnvironmentReply)(nil), "octl.ControlEnvironmentReply")
	proto.RegisterType((*ModifyEnvironmentRequest)(nil), "octl.ModifyEnvironmentRequest")
	proto.RegisterType((*EnvironmentOperation)(nil), "octl.EnvironmentOperation")
	proto.RegisterType((*ModifyEnvironmentReply)(nil), "octl.ModifyEnvironmentReply")
	proto.RegisterType((*DestroyEnvironmentRequest)(nil), "octl.DestroyEnvironmentRequest")
	proto.RegisterType((*DestroyEnvironmentReply)(nil), "octl.DestroyEnvironmentReply")
	proto.RegisterType((*GetRolesRequest)(nil), "octl.GetRolesRequest")
	proto.RegisterType((*GetRolesReply)(nil), "octl.GetRolesReply")
	proto.RegisterType((*RoleInfo)(nil), "octl.RoleInfo")
	proto.RegisterEnum("octl.StatusUpdate_Level", StatusUpdate_Level_name, StatusUpdate_Level_value)
	proto.RegisterEnum("octl.ControlEnvironmentRequest_Optype", ControlEnvironmentRequest_Optype_name, ControlEnvironmentRequest_Optype_value)
	proto.RegisterEnum("octl.EnvironmentOperation_Optype", EnvironmentOperation_Optype_name, EnvironmentOperation_Optype_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Octl service

type OctlClient interface {
	TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Octl_TrackStatusClient, error)
	GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error)
	Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error)
	GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error)
	NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error)
	GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error)
	ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error)
	ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error)
	GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error)
}

type octlClient struct {
	cc *grpc.ClientConn
}

func NewOctlClient(cc *grpc.ClientConn) OctlClient {
	return &octlClient{cc}
}

func (c *octlClient) TrackStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (Octl_TrackStatusClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Octl_serviceDesc.Streams[0], c.cc, "/octl.Octl/TrackStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &octlTrackStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Octl_TrackStatusClient interface {
	Recv() (*StatusReply, error)
	grpc.ClientStream
}

type octlTrackStatusClient struct {
	grpc.ClientStream
}

func (x *octlTrackStatusClient) Recv() (*StatusReply, error) {
	m := new(StatusReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *octlClient) GetFrameworkInfo(ctx context.Context, in *GetFrameworkInfoRequest, opts ...grpc.CallOption) (*GetFrameworkInfoReply, error) {
	out := new(GetFrameworkInfoReply)
	err := grpc.Invoke(ctx, "/octl.Octl/GetFrameworkInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownReply, error) {
	out := new(TeardownReply)
	err := grpc.Invoke(ctx, "/octl.Octl/Teardown", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsReply, error) {
	out := new(GetEnvironmentsReply)
	err := grpc.Invoke(ctx, "/octl.Octl/GetEnvironments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) NewEnvironment(ctx context.Context, in *NewEnvironmentRequest, opts ...grpc.CallOption) (*NewEnvironmentReply, error) {
	out := new(NewEnvironmentReply)
	err := grpc.Invoke(ctx, "/octl.Octl/NewEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*GetEnvironmentReply, error) {
	out := new(GetEnvironmentReply)
	err := grpc.Invoke(ctx, "/octl.Octl/GetEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) ControlEnvironment(ctx context.Context, in *ControlEnvironmentRequest, opts ...grpc.CallOption) (*ControlEnvironmentReply, error) {
	out := new(ControlEnvironmentReply)
	err := grpc.Invoke(ctx, "/octl.Octl/ControlEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) ModifyEnvironment(ctx context.Context, in *ModifyEnvironmentRequest, opts ...grpc.CallOption) (*ModifyEnvironmentReply, error) {
	out := new(ModifyEnvironmentReply)
	err := grpc.Invoke(ctx, "/octl.Octl/ModifyEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentReply, error) {
	out := new(DestroyEnvironmentReply)
	err := grpc.Invoke(ctx, "/octl.Octl/DestroyEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *octlClient) GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error) {
	out := new(GetRolesReply)
	err := grpc.Invoke(ctx, "/octl.Octl/GetRoles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Octl service

type OctlServer interface {
	TrackStatus(*StatusRequest, Octl_TrackStatusServer) error
	GetFrameworkInfo(context.Context, *GetFrameworkInfoRequest) (*GetFrameworkInfoReply, error)
	Teardown(context.Context, *TeardownRequest) (*TeardownReply, error)
	GetEnvironments(context.Context, *GetEnvironmentsRequest) (*GetEnvironmentsReply, error)
	NewEnvironment(context.Context, *NewEnvironmentRequest) (*NewEnvironmentReply, error)
	GetEnvironment(context.Context, *GetEnvironmentRequest) (*GetEnvironmentReply, error)
	ControlEnvironment(context.Context, *ControlEnvironmentRequest) (*ControlEnvironmentReply, error)
	ModifyEnvironment(context.Context, *ModifyEnvironmentRequest) (*ModifyEnvironmentReply, error)
	DestroyEnvironment(context.Context, *DestroyEnvironmentRequest) (*DestroyEnvironmentReply, error)
	GetRoles(context.Context, *GetRolesRequest) (*GetRolesReply, error)
}

func RegisterOctlServer(s *grpc.Server, srv OctlServer) {
	s.RegisterService(&_Octl_serviceDesc, srv)
}

func _Octl_TrackStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OctlServer).TrackStatus(m, &octlTrackStatusServer{stream})
}

type Octl_TrackStatusServer interface {
	Send(*StatusReply) error
	grpc.ServerStream
}

type octlTrackStatusServer struct {
	grpc.ServerStream
}

func (x *octlTrackStatusServer) Send(m *StatusReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Octl_GetFrameworkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameworkInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetFrameworkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetFrameworkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetFrameworkInfo(ctx, req.(*GetFrameworkInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_Teardown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).Teardown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/Teardown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).Teardown(ctx, req.(*TeardownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetEnvironments(ctx, req.(*GetEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_NewEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).NewEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/NewEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).NewEnvironment(ctx, req.(*NewEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetEnvironment(ctx, req.(*GetEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_ControlEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).ControlEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/ControlEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).ControlEnvironment(ctx, req.(*ControlEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_ModifyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).ModifyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/ModifyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).ModifyEnvironment(ctx, req.(*ModifyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_DestroyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).DestroyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/DestroyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).DestroyEnvironment(ctx, req.(*DestroyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Octl_GetRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OctlServer).GetRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/octl.Octl/GetRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OctlServer).GetRoles(ctx, req.(*GetRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Octl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "octl.Octl",
	HandlerType: (*OctlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFrameworkInfo",
			Handler:    _Octl_GetFrameworkInfo_Handler,
		},
		{
			MethodName: "Teardown",
			Handler:    _Octl_Teardown_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _Octl_GetEnvironments_Handler,
		},
		{
			MethodName: "NewEnvironment",
			Handler:    _Octl_NewEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironment",
			Handler:    _Octl_GetEnvironment_Handler,
		},
		{
			MethodName: "ControlEnvironment",
			Handler:    _Octl_ControlEnvironment_Handler,
		},
		{
			MethodName: "ModifyEnvironment",
			Handler:    _Octl_ModifyEnvironment_Handler,
		},
		{
			MethodName: "DestroyEnvironment",
			Handler:    _Octl_DestroyEnvironment_Handler,
		},
		{
			MethodName: "GetRoles",
			Handler:    _Octl_GetRoles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrackStatus",
			Handler:       _Octl_TrackStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/octlserver.proto",
}

func init() { proto.RegisterFile("protos/octlserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xeb, 0x4e, 0xe3, 0xc6,
	0x17, 0x8f, 0x73, 0x81, 0x70, 0x02, 0xc1, 0x0c, 0x81, 0x0d, 0x5e, 0x76, 0xff, 0xfc, 0x47, 0x55,
	0x4b, 0xd5, 0x36, 0xdd, 0xa6, 0x5d, 0x75, 0xb7, 0xfd, 0xc4, 0xc5, 0x64, 0x53, 0x6d, 0x6c, 0xe4,
	0x04, 0x56, 0xaa, 0x54, 0x51, 0xe3, 0x4c, 0x96, 0x68, 0x1d, 0x4f, 0x6a, 0x0f, 0x20, 0x1e, 0xa1,
	0xef, 0xd0, 0x3e, 0x47, 0x1f, 0xac, 0x2f, 0x50, 0xcd, 0x8c, 0x9d, 0xf8, 0x2a, 0xf8, 0xe6, 0x39,
	0xe7, 0x77, 0x6e, 0xbf, 0x39, 0xe7, 0x8c, 0xe1, 0xd9, 0xdc, 0xa7, 0x8c, 0x06, 0xdf, 0x52, 0x87,
	0xb9, 0x01, 0xf1, 0xef, 0x88, 0xdf, 0x11, 0x12, 0x54, 0xe5, 0x12, 0xbc, 0x0b, 0x2d, 0xfd, 0x8e,
	0x78, 0xec, 0x6a, 0x40, 0x02, 0x1a, 0xbc, 0x23, 0xb6, 0xcf, 0xae, 0x89, 0xcd, 0xf0, 0xab, 0x48,
	0xde, 0x23, 0x1e, 0xf1, 0xa7, 0xce, 0x80, 0x04, 0x81, 0xfd, 0x91, 0xa0, 0x36, 0xac, 0xce, 0xe4,
	0x67, 0x5b, 0x39, 0x50, 0x0e, 0xd7, 0xac, 0xe8, 0x88, 0x37, 0x61, 0x63, 0xc8, 0x6c, 0x76, 0x1b,
	0x58, 0xe4, 0x8f, 0x5b, 0x12, 0x30, 0xfc, 0x1b, 0x34, 0x22, 0xc1, 0xdc, 0x7d, 0x40, 0x2d, 0xa8,
	0x05, 0xcc, 0x66, 0x91, 0x9d, 0x3c, 0xa0, 0x37, 0xb0, 0x11, 0x08, 0xd0, 0xc5, 0x7c, 0x6c, 0x33,
	0x12, 0xb4, 0xcb, 0x07, 0x95, 0xc3, 0x46, 0x17, 0x75, 0x78, 0x76, 0x9d, 0x61, 0x4c, 0x65, 0x25,
	0x81, 0xf8, 0xcf, 0x32, 0xac, 0xc7, 0xf5, 0xa8, 0x03, 0x35, 0x97, 0xdc, 0x11, 0x57, 0x04, 0x68,
	0x76, 0xdb, 0x59, 0x17, 0x9d, 0xf7, 0x5c, 0x6f, 0x49, 0x18, 0x3a, 0x85, 0xe6, 0x2c, 0x51, 0x74,
	0xbb, 0x7c, 0xa0, 0x1c, 0x36, 0xba, 0x9a, 0x34, 0xcc, 0xa3, 0xe5, 0x5d, 0xc9, 0x4a, 0xd9, 0x70,
	0x2f, 0x1f, 0x13, 0x14, 0xb5, 0x2b, 0x59, 0x2f, 0x49, 0x12, 0xb9, 0x97, 0xa4, 0x0d, 0xfe, 0x01,
	0x6a, 0x22, 0x37, 0xb4, 0x06, 0xb5, 0x53, 0xfd, 0xf8, 0xa2, 0xa7, 0x96, 0x50, 0x1d, 0xaa, 0x7d,
	0xe3, 0xcc, 0x54, 0x15, 0xd4, 0x80, 0xd5, 0x0f, 0x47, 0x96, 0xd1, 0x37, 0x7a, 0x6a, 0x99, 0x23,
	0x74, 0xcb, 0x32, 0x2d, 0xb5, 0x72, 0xbc, 0x0a, 0x35, 0xe1, 0x1f, 0xef, 0xc1, 0xb3, 0x1e, 0x61,
	0x67, 0xbe, 0x3d, 0x23, 0xf7, 0xd4, 0xff, 0xd4, 0xf7, 0x26, 0x34, 0xba, 0x85, 0xbf, 0x15, 0xd8,
	0xc9, 0xea, 0xf8, 0x85, 0x1c, 0x40, 0x63, 0xb2, 0x90, 0x8e, 0xc3, 0x6b, 0x89, 0x8b, 0xd0, 0xd7,
	0xb0, 0x45, 0xbc, 0xbb, 0xa9, 0x4f, 0xbd, 0x19, 0xf1, 0x58, 0x70, 0x42, 0x6f, 0x3d, 0x49, 0x52,
	0xcd, 0xca, 0x2a, 0xd0, 0x4b, 0x00, 0x9f, 0xba, 0x24, 0x84, 0x55, 0x04, 0x2c, 0x26, 0x59, 0x36,
	0x40, 0x35, 0xd6, 0x00, 0xf8, 0x4b, 0xd8, 0x1c, 0x11, 0xdb, 0x1f, 0xd3, 0x7b, 0x2f, 0x4c, 0x19,
	0xed, 0xc2, 0x8a, 0x4f, 0xec, 0x80, 0x7a, 0x61, 0x4e, 0xe1, 0x89, 0x77, 0xd8, 0x12, 0x3a, 0x77,
	0x1f, 0x70, 0x1b, 0x76, 0x7b, 0x84, 0xe9, 0xb1, 0x4c, 0xa2, 0xaa, 0x03, 0x68, 0x65, 0x34, 0x4f,
	0xab, 0xf9, 0x2d, 0xac, 0xc7, 0x4b, 0x0b, 0xfb, 0x71, 0x27, 0xbc, 0xcd, 0xa5, 0x46, 0xf0, 0x98,
	0x80, 0x62, 0x0a, 0x9b, 0x29, 0x00, 0x6a, 0x42, 0x79, 0x1a, 0x85, 0x29, 0x4f, 0xc7, 0x3c, 0xbe,
	0xe3, 0x13, 0x9b, 0x91, 0xf1, 0x87, 0x1b, 0xe2, 0x09, 0x2e, 0xd7, 0xac, 0xb8, 0x68, 0xc9, 0x52,
	0x25, 0x3e, 0x26, 0x2d, 0xa8, 0x09, 0x26, 0xdb, 0xd5, 0x83, 0x0a, 0x97, 0x8a, 0x03, 0xfe, 0x06,
	0x76, 0x0c, 0x72, 0x1f, 0x8b, 0x19, 0x31, 0xb8, 0x80, 0x2b, 0x71, 0xf8, 0xcf, 0xb0, 0x9d, 0x86,
	0x73, 0x4e, 0xd2, 0x39, 0x2e, 0x32, 0x28, 0xc7, 0xef, 0xe9, 0x0b, 0xd1, 0x46, 0x39, 0xb1, 0x52,
	0xe6, 0xd8, 0x80, 0xed, 0x34, 0x90, 0x47, 0xf9, 0x11, 0x1a, 0x31, 0xb2, 0x04, 0xbe, 0x90, 0xd6,
	0x38, 0x12, 0xff, 0xa3, 0xc0, 0xde, 0x09, 0xf5, 0x98, 0x4f, 0xdd, 0xc7, 0xa3, 0xa3, 0x9f, 0xa0,
	0xca, 0x1e, 0xe6, 0x32, 0xf7, 0x66, 0xf7, 0x73, 0xe9, 0xbf, 0xd0, 0xbc, 0x63, 0xce, 0x39, 0xda,
	0x12, 0x36, 0xd8, 0x80, 0x15, 0x79, 0xe6, 0xa3, 0x67, 0x98, 0xe6, 0xb9, 0x5a, 0x42, 0x3b, 0xb0,
	0x35, 0x1c, 0x1d, 0x59, 0xa3, 0x2b, 0xdd, 0xb8, 0xec, 0x5b, 0xa6, 0x31, 0xd0, 0x8d, 0x91, 0xaa,
	0xa0, 0x16, 0xa8, 0xc3, 0x91, 0x79, 0x9e, 0x90, 0x96, 0xd1, 0x06, 0xac, 0x9d, 0x98, 0xc6, 0x59,
	0xbf, 0x77, 0x61, 0xe9, 0x6a, 0x85, 0x4f, 0x65, 0x5e, 0x64, 0xde, 0xb9, 0x13, 0x68, 0x0f, 0xe8,
	0x78, 0x3a, 0x79, 0x78, 0x52, 0x49, 0x40, 0xe7, 0xc4, 0xb7, 0xd9, 0x94, 0x7a, 0x51, 0x3f, 0x6a,
	0x19, 0xe2, 0xcc, 0x08, 0x62, 0xc5, 0xd0, 0xf8, 0x2f, 0x05, 0x5a, 0x79, 0x20, 0xf4, 0x3a, 0xe4,
	0x49, 0xee, 0xca, 0xff, 0x17, 0xbb, 0x4b, 0x50, 0x84, 0x34, 0xa8, 0xf3, 0x5e, 0x32, 0xec, 0x59,
	0xd4, 0x1e, 0x8b, 0x33, 0xfe, 0x2e, 0x87, 0xbe, 0x4d, 0x68, 0x58, 0xfa, 0xc0, 0xbc, 0xd4, 0xaf,
	0x2c, 0xf3, 0xbd, 0xae, 0x56, 0xd0, 0x3a, 0xd4, 0x8f, 0x4e, 0x4f, 0xe5, 0xa9, 0x8a, 0x7f, 0x87,
	0xdd, 0x1c, 0x1a, 0x78, 0xbb, 0x9c, 0x81, 0x3a, 0xb1, 0xa7, 0x2e, 0x19, 0x9b, 0xcb, 0xd2, 0x95,
	0x47, 0x4b, 0xcf, 0xd8, 0xe0, 0xaf, 0x60, 0xef, 0x94, 0x04, 0xcc, 0xa7, 0x4f, 0x60, 0x9a, 0x5f,
	0x58, 0x1e, 0x98, 0x5f, 0xd8, 0x16, 0x6c, 0xf6, 0x08, 0xb3, 0xf8, 0x1c, 0x45, 0x3b, 0xe6, 0x35,
	0x6c, 0x2c, 0x45, 0x3c, 0xe7, 0xcf, 0xe2, 0x53, 0xd7, 0xe8, 0x36, 0x65, 0xa2, 0x1c, 0x20, 0xba,
	0x3a, 0x9c, 0x42, 0x0f, 0xea, 0x91, 0x08, 0x21, 0xa8, 0x7a, 0x9c, 0x4a, 0x99, 0x82, 0xf8, 0x46,
	0xfb, 0xb0, 0xe6, 0x50, 0x6f, 0x3c, 0xe5, 0xf9, 0x87, 0x1c, 0x2f, 0x05, 0x05, 0xeb, 0x41, 0x83,
	0xfa, 0x0d, 0x0d, 0x98, 0xf0, 0x25, 0xb7, 0xeb, 0xe2, 0xdc, 0xfd, 0xb7, 0x06, 0x55, 0xd3, 0x61,
	0x2e, 0x7a, 0x0b, 0x8d, 0x91, 0x6f, 0x3b, 0x9f, 0xe4, 0x8b, 0x88, 0xb6, 0xe3, 0xef, 0x63, 0x58,
	0x93, 0xb6, 0x95, 0x14, 0xf2, 0xca, 0x4b, 0xaf, 0x14, 0x74, 0x0e, 0x6a, 0xfa, 0x0d, 0x41, 0x2f,
	0x24, 0xb4, 0xe0, 0xdd, 0xd1, 0x9e, 0x17, 0xa9, 0x85, 0x4f, 0xf4, 0x06, 0xea, 0xd1, 0x2e, 0x47,
	0xe1, 0x16, 0x48, 0x3d, 0x03, 0xda, 0x76, 0x5a, 0x2c, 0x2d, 0x07, 0xe2, 0x26, 0xe2, 0xab, 0x1d,
	0xed, 0x2f, 0x62, 0xe5, 0xbc, 0x05, 0x9a, 0x56, 0xa0, 0x95, 0xee, 0x7e, 0x81, 0x66, 0x72, 0x29,
	0xa2, 0x30, 0xf3, 0xdc, 0xcd, 0xaa, 0xed, 0xe5, 0x2b, 0x17, 0xbe, 0x92, 0x51, 0xd0, 0xf3, 0xbc,
	0xd8, 0x29, 0x5f, 0x39, 0xdb, 0x12, 0x97, 0xd0, 0x25, 0xa0, 0xec, 0xf2, 0x40, 0xff, 0x7b, 0x64,
	0xa1, 0x69, 0x2f, 0x8a, 0x01, 0xd2, 0xef, 0x10, 0xb6, 0x32, 0x23, 0x87, 0x5e, 0x4a, 0xab, 0xa2,
	0x95, 0xa4, 0xed, 0x17, 0xea, 0x17, 0xc9, 0x66, 0x07, 0x27, 0x4a, 0xb6, 0x70, 0xfe, 0xa2, 0x64,
	0x8b, 0x66, 0x4e, 0x74, 0x49, 0x34, 0x62, 0x51, 0x97, 0xa4, 0xa6, 0x30, 0xea, 0x92, 0xc4, 0x24,
	0xe2, 0xd2, 0x31, 0x86, 0x7d, 0xe7, 0xa6, 0xe3, 0x10, 0xdf, 0xeb, 0xd8, 0xee, 0xd4, 0x21, 0x12,
	0xe5, 0xcf, 0x1d, 0xf9, 0x0f, 0xfc, 0x6b, 0x79, 0x7e, 0x7d, 0xbd, 0x22, 0x7e, 0x84, 0xbf, 0xff,
	0x2f, 0x00, 0x00, 0xff, 0xff, 0x81, 0x2c, 0x11, 0x8c, 0x23, 0x0b, 0x00, 0x00,
}
